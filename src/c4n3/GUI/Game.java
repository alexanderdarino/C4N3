/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Game.java
 *
 * Created on Mar 27, 2011, 6:11:25 PM
 */

package c4n3.GUI;

import c4n3.Grid.PiecePlacedEvent;
import java.awt.BorderLayout;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author Alexander Darino
 */
public class Game extends javax.swing.JFrame{

    /** Creates new form Game */
    public Game() {
        
        initComponents();
        Engine engine = new Engine();
        gameGrid.setGrid(engine.getGrid());
        gameGrid.setListener(engine);



    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerColorButtonGroup = new javax.swing.ButtonGroup();
        playerOrderButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        newGamePanel = new javax.swing.JPanel();
        playerColorPanel = new javax.swing.JPanel();
        playerColorLabel = new javax.swing.JLabel();
        greenColorButton = new javax.swing.JRadioButton();
        redColorButton = new javax.swing.JRadioButton();
        playerOrderPanel = new javax.swing.JPanel();
        playerOrderLabel = new javax.swing.JLabel();
        player1GoesFirstButton = new javax.swing.JRadioButton();
        player2GoesFirstButton = new javax.swing.JRadioButton();
        startGameButton = new javax.swing.JButton();
        playerTurnPanel = new c4n3.GUI.PlayerTurnPanel();
        gameGrid = new c4n3.GUI.Grid();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        newGamePanel.setLayout(new java.awt.GridLayout(3, 1));

        playerColorLabel.setText("Player 1 Color:");
        playerColorPanel.add(playerColorLabel);

        playerColorButtonGroup.add(greenColorButton);
        greenColorButton.setText("Green");
        greenColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greenColorButtonActionPerformed(evt);
            }
        });
        playerColorPanel.add(greenColorButton);

        playerColorButtonGroup.add(redColorButton);
        redColorButton.setText("Red");
        playerColorPanel.add(redColorButton);

        newGamePanel.add(playerColorPanel);

        playerOrderLabel.setText("Who Goes First?");
        playerOrderPanel.add(playerOrderLabel);

        playerOrderButtonGroup.add(player1GoesFirstButton);
        player1GoesFirstButton.setText("Player 1");
        playerOrderPanel.add(player1GoesFirstButton);

        playerOrderButtonGroup.add(player2GoesFirstButton);
        player2GoesFirstButton.setText("Player 2");
        playerOrderPanel.add(player2GoesFirstButton);

        newGamePanel.add(playerOrderPanel);

        startGameButton.setText("Start Game");
        newGamePanel.add(startGameButton);

        jPanel1.add(newGamePanel);
        jPanel1.add(playerTurnPanel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.EAST);
        getContentPane().add(gameGrid, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void greenColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greenColorButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_greenColorButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Game game = new Game();
                game.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private c4n3.GUI.Grid gameGrid;
    private javax.swing.JRadioButton greenColorButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel newGamePanel;
    private javax.swing.JRadioButton player1GoesFirstButton;
    private javax.swing.JRadioButton player2GoesFirstButton;
    private javax.swing.ButtonGroup playerColorButtonGroup;
    private javax.swing.JLabel playerColorLabel;
    private javax.swing.JPanel playerColorPanel;
    private javax.swing.ButtonGroup playerOrderButtonGroup;
    private javax.swing.JLabel playerOrderLabel;
    private javax.swing.JPanel playerOrderPanel;
    private c4n3.GUI.PlayerTurnPanel playerTurnPanel;
    private javax.swing.JRadioButton redColorButton;
    private javax.swing.JButton startGameButton;
    // End of variables declaration//GEN-END:variables


    public class Engine implements c4n3.Grid.Listener
    {
        c4n3.Grid grid = new c4n3.Grid();
        public void piecePlaced(PiecePlacedEvent e) {
               if (grid.isPartOfSequenceOfAtLeastLength(e.getX(), e.getY(), 3))
               {
                    if (grid.isPartOfSequenceOfAtLeastLength(e.getX(), e.getY(), 4))
                    {
                        gameGrid.setGrid(null);
                        JOptionPane.showMessageDialog(null, e.getPlayerID() + " has won!");
                    }
                    else
                    {
                        gameGrid.setGrid(null);
                        JOptionPane.showMessageDialog(null, e.getPlayerID() + " has lost. " + (1+e.getPlayerID()%2) + " has won!");
                    }
               }
               else
               {
                   playerTurnPanel.updateTurn(e.getPlayerID(), Character.toString((char)(e.getY() + 'A')) + Integer.toString(e.getX()+1));
                   gameGrid.setPlayerTurn(1+e.getPlayerID()%2);
                   gameGrid.setEnabled(true);
               }


        }

        c4n3.Grid getGrid() {
            return grid;
        }

    }

}
